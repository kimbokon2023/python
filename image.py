# 필요한 라이브러리 불러오기
from PIL import Image, ImageDraw, ImageFont
import matplotlib.font_manager as fm

# 글 내용을 리스트로 저장
texts = [
    "안녕하세요, 여러분. 살아가면서 우리는 다양한 도전과 어려움을 마주하게 됩니다. 인생의 여정은 결코 평탄하지 않으며, 때로는 예상치 못한 시련이 우리 앞에 놓이기도 합니다. 이러한 순간에는 누구나 두려움과 불안감을 느끼기 마련입니다. 하지만 중요한 것은 이러한 어려움을 어떻게 이겨내고, 다시 일어설 수 있는가입니다.",
    "오늘은 '살아가면서 힘든 일을 맞닥뜨리고 이겨내는 지혜'에 대해 이야기해 보려고 합니다. 이 글을 통해 여러분이 현재 겪고 있는 어려움을 극복하는 데 도움이 되기를 바랍니다. 우리 모두는 어려움을 겪지만, 그것을 이겨내는 방법을 알고 있다면 우리는 더욱 강해질 수 있습니다.",
    "아마도 지금 이 글을 읽고 계시는 여러분 중 많은 분들이 크고 작은 어려움을 겪고 계실 것입니다. 직장에서의 스트레스, 대인 관계에서의 갈등, 혹은 개인적인 문제까지 다양한 형태의 어려움이 우리를 괴롭힐 수 있습니다. 이러한 순간에 우리는 혼자가 아니며, 모두가 비슷한 감정을 경험하고 있다는 사실을 기억하는 것이 중요합니다.",
    "이 글에서는 먼저 힘든 일을 맞닥뜨릴 때 느끼는 감정에 대해 이야기하고, 그런 감정을 어떻게 다루어야 하는지 살펴보겠습니다. 그리고 힘든 일을 이겨내는 구체적인 방법과 전략, 마지막으로 실제로 어려움을 극복한 사례를 통해 여러분에게 실질적인 도움을 드리고자 합니다. 이 글을 통해 여러분이 조금이라도 위로받고, 새로운 용기를 얻을 수 있기를 바랍니다.",
    "힘든 일을 맞닥뜨릴 때의 감정: 두려움과 불안감은 자연스러운 반응이며, 이를 인정하는 것이 중요합니다. 또한, 어려움이 길어지거나 극복할 수 없을 것처럼 느껴질 때 우리는 절망과 포기하고 싶은 마음에 빠지기 쉽습니다. 아무리 노력해도 상황이 나아지지 않는 것 같을 때, 모든 것을 포기하고 싶어질 수 있습니다. 하지만 이러한 감정 속에서도 우리는 희망의 끈을 놓지 않아야 합니다.",
    "힘든 일을 이겨내는 방법: 긍정적인 마인드셋을 유지하는 것이 중요합니다. 긍정적인 생각은 단순히 상황을 낙관적으로 보는 것이 아니라, 문제를 해결할 수 있다는 믿음과 자신감을 갖는 것입니다. 긍정적인 마인드셋은 우리가 어려움을 극복하는 데 필요한 에너지를 제공합니다.",
    "현실을 직시하고 계획 세우기: 현실을 외면하지 않고 직시하는 것도 중요합니다. 현재 상황을 정확하게 파악하고, 문제를 해결하기 위한 구체적인 계획을 세우는 것이 필요합니다. 문제를 작게 나누어 하나씩 해결해 나가는 방식이 효과적일 수 있습니다.",
    "구체적인 이겨내기 전략: 작은 목표를 설정하고 이를 성취하는 것은 큰 힘이 됩니다. 예를 들어, 하루에 한 가지씩 작은 목표를 정하고 이를 이루는 것입니다. 이러한 작은 성취들은 자신감을 높여주고, 큰 목표를 이루는 데 필요한 동기부여가 됩니다.",
    "성공적인 극복 사례: 한 회사원이 직장에서 큰 실수를 저지르고 좌절했지만, 동료들의 도움과 자신의 노력을 통해 다시 일어선 이야기를 소개합니다. 그는 처음에 큰 두려움과 불안감에 시달렸지만, 긍정적인 마인드셋을 유지하고 현실을 직시하며 작은 목표들을 하나씩 이루어 나갔습니다. 그의 사례를 통해 우리는 어려움을 극복하는 구체적인 방법과 그로부터 얻을 수 있는 교훈을 배울 수 있습니다.",
    "결론: 힘든 일을 맞닥뜨렸을 때 우리는 두려움과 불안감, 절망과 같은 감정을 느낍니다. 하지만 이러한 감정들을 인정하고, 긍정적인 마인드셋을 유지하며, 현실을 직시하고 계획을 세우는 것이 중요합니다. 작은 목표를 설정하고 이를 성취해 나가며, 스트레스를 관리하고, 지지 시스템을 구축하는 구체적인 이겨내기 전략들이 큰 도움이 됩니다."
]

# 한 이미지에 들어갈 최대 글자 수
max_chars_per_image = 500

# 글자 수에 따라 이미지를 생성할 텍스트 리스트 생성
image_texts = []
current_text = ""
for text in texts:
    if len(current_text) + len(text) > max_chars_per_image:
        image_texts.append(current_text)
        current_text = text
    else:
        current_text += "\n" + text

if current_text:
    image_texts.append(current_text)

# 폰트 설정 (한글 폰트 사용)
font_path = fm.findfont(fm.FontProperties(family='NanumGothic'))
font = ImageFont.truetype(font_path, 18)

# 이미지 생성
images = []
for i, text in enumerate(image_texts):
    img = Image.new('RGB', (800, 400), color = (255, 255, 255))
    d = ImageDraw.Draw(img)
    d.text((10,10), text, font=font, fill=(0,0,0))
    image_path = f"/mnt/data/blog_image_{i+1}.png"
    img.save(image_path)
    images.append(image_path)

images
